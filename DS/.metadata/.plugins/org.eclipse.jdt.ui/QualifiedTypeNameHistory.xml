<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.prac.array.TwoDimensionalArray"/>
    <fullyQualifiedTypeName name="java.lang.ArrayIndexOutOfBoundsException"/>
    <fullyQualifiedTypeName name="com.prac.loops.PracticeExecute"/>
    <fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
    <fullyQualifiedTypeName name="com.prac.loops.Main"/>
    <fullyQualifiedTypeName name="com.prac.array.RotateMatrix2_LC"/>
    <fullyQualifiedTypeName name="com.prac.array.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
    <fullyQualifiedTypeName name="com.prac.array.SingleDimensionArray"/>
    <fullyQualifiedTypeName name="com.prac.loops.Practice"/>
    <fullyQualifiedTypeName name="java.lang.Boolean"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="com.prac.loops.Example"/>
    <fullyQualifiedTypeName name="com.prac.linkedlist.Node_SingleLinkedList"/>
    <fullyQualifiedTypeName name="org.w3c.dom.Node"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.prac.linkedlist.Node1"/>
    <fullyQualifiedTypeName name="com.prac.linkedlist.SingleLinkedList"/>
    <fullyQualifiedTypeName name="com.prac.linkedlist.Node"/>
    <fullyQualifiedTypeName name="com.prac.loops.Node"/>
    <fullyQualifiedTypeName name="com.problems.circularlinkedlist.Implement_CircularLinkedList"/>
    <fullyQualifiedTypeName name="com.prac.circularlinkedlist.Main"/>
    <fullyQualifiedTypeName name="java.security.PublicKey"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.problems.circularlinkedlist.Node"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="com.prac.doublelinkedlist.DoubleNode"/>
    <fullyQualifiedTypeName name="com.prac.doublelinkedlist.DoublyLinkedList"/>
    <fullyQualifiedTypeName name="com.prac.doublelinkedlist.DoublyNode"/>
    <fullyQualifiedTypeName name="com.prac.doublelinkedlist.DoublyNode1"/>
    <fullyQualifiedTypeName name="com.prac.circulardoublelinkedlist.CircularDoublyLinkedList"/>
    <fullyQualifiedTypeName name="com.prac.circulardoublelinkedlist.CircularDoublyLinkedList1"/>
    <fullyQualifiedTypeName name="com.prac.circulardoublelinkedlist.DoublyNode"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="com.prac.circulardoublelinkedlist.DoublyNode1"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="com.problems.circulardoublelinkedlist.Questions"/>
    <fullyQualifiedTypeName name="com.problems.circulardoublelinkedlist.LinkedList"/>
    <fullyQualifiedTypeName name="com.problems.circulardoublelinkedlist.Node"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="com.prac.stack.Stack"/>
    <fullyQualifiedTypeName name="int"/>
    <fullyQualifiedTypeName name="com.prac.stacklinkedlist.LinkedList"/>
</qualifiedTypeNameHistroy>
